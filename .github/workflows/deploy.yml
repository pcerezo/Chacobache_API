name: CI/CD for Fullstack App

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CHACO_TOKEN_2 }}

    - name: Set environment variables
      env:
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_CODE: ${{ secrets.EMAIL_CODE }}
          EMAIL_DESTINO: ${{ secrets.EMAIL_DESTINO }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        echo "EMAIL_USER=${EMAIL_USER}" >> .env.production
        echo "EMAIL_CODE=${EMAIL_CODE}" >> .env.production
        echo "EMAIL_DESTINO=${EMAIL_DESTINO}" >> .env.production
        echo "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}" >> .env.production
        echo "MYSQL_DATABASE=${MYSQL_DATABASE}" >> .env.production
        echo "MYSQL_USER=${MYSQL_USER}" >> .env.production
        echo "MYSQL_PASSWORD=${MYSQL_PASSWORD}" >> .env.production
        echo "DB_HOST=${DB_HOST}" >> .env.production
        echo "DB_USER=${DB_USER}" >> .env.production
        echo "DB_PASS=${DB_PASS}" >> .env.production
        echo "DB_NAME=${DB_NAME}" >> .env.production

    - name: Build image and push
      run: |
        docker compose --env-file .env.production build
        docker compose push
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
    
    #- name: Run tests
    #  run: npm test
    
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. LoguÃ©ate en el GitHub Container Registry
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CHACO_TOKEN_2 }}

      # 3. Despliega el contenedor
      - name: Deploy Docker container
        run: |
          docker compose --env-file .env.production up -d

      # 4. Crear el archivo .nojekyll
      - name: Add .nojekyll file
        run: echo > .nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.CHACO_TOKEN_2 }}
          publish_branch: gh-pages
          publish_dir: ./


